syntax = "proto3";

package ocis.messages.accounts.v0;

option go_package = "github.com/owncloud/ocis/protogen/gen/ocis/messages/accounts/v0";

import "google/protobuf/timestamp.proto";
// Account follows the properties of the ms graph api user resource.
// See https://docs.microsoft.com/en-us/graph/api/resources/user?view=graph-rest-1.0#properties
message Account {

    // Note that field numbers in the range 1 through 15 take one byte to encode, including the field number and the field's type

    // The unique identifier for the user. Key. Not nullable. Non reassignable. Read-only.
    string id = 1;

    // `true` if the account is enabled; otherwise, `false`. This property is required when a user is created. Supports $filter.
    bool account_enabled = 2;

    // A resource account is also known as a /disabled user object/ in Azure AD, and can be used to represent resources in general.
    // In Exchange it might be used to represent conference rooms, for example, and allow them to have a phone number.
    // You could give printers or machines with a sync client resource accounts as well.
    // A resource account can be homed in Microsoft 365 or on premises using Skype for Business Server 2019.
    // `true` if the user is a resource account; otherwise, `false`. Null value should be considered false.
    bool is_resource_account = 3;

    // Indicates whether the account was created as
    // - a regular school or work account ("" / emptystring),
    // - a local account, fully managed by oCIS (LocalAccount), includes synced accounts or
    // - an external account (Invitation),
    // - self-service sign-up using email verification (EmailVerified). Read-only.
    string creation_type = 4;

    // Represents the identities that can be used to sign in to this account.
    // An identity can be provided by oCIS (also known as a local account), by organizations, or by social identity providers such as Facebook, Google, and Microsoft, and is tied to an account.
    // May contain multiple items with the same signInType value. Supports $filter.
    repeated Identities identities = 5;

    // posixaccount properties

    // The name displayed in the address book for the account.
    // This is usually the combination of the user's first name, middle initial and last name.
    // This property is required when a user is created and it cannot be cleared during updates.
    // Supports $filter and $orderby.
    // posixaccount MUST cn
    string display_name = 6;

    // The username
    // posixaccount MUST uid
    string preferred_name = 7;

    // TODO rename to on_premise_? or move to extension? see https://docs.microsoft.com/en-us/graph/extensibility-open-users

    // used for exposing the user using ldap
    // posixaccount MUST uidnumber
    int64 uid_number = 8;

    // used for exposing the user using ldap
    // posixaccount MUST gidnumber
    int64 gid_number = 9;

    // posixaccount MUST homedirectory
    // constructed dynamically in glauth

    // posixaccount MAY loginshell
    // posixaccount MAY gecos

    // For the GECOS field:
    // - User's full name (or application name, if the account is for a program) -> displayname (description)
    // - Building and room number or contact person -> -
    // - Office telephone number -> -
    // - Any other contact information (pager number, fax, etc.) -> mail
    // eg "Albert Einstein (Beware! I'm doing science!),,,einstein@example.com" as the gecos

    // The SMTP address for the user, for example, "jeff@contoso.onmicrosoft.com". Read-Only. Supports $filter.
    // inetorgperson MAY mail
    string mail = 10;

    // A description, useful for resource accounts
    // posixaccount MAY description
    string description = 11;

    // Specifies the password profile for the user.
    // The profile contains the user’s password. This property is required when a user is created.
    // The password in the profile must satisfy minimum requirements as specified by the passwordPolicies property.
    // By default, a strong password is required.
    // posixaccount MAY authPassword
    PasswordProfile password_profile = 12;

    // The groups, directory roles and administrative units that the user is a member of. Read-only. Nullable.
    // should we only respond with repeated strings of ids? no clients should a proper filter mask!
    repeated Group memberOf = 13;

    // Field numbers in the range 16 through 2047 take two bytes. So you should reserve the field numbers 1 through 15 for very frequently occurring message elements. Remember to leave some room for frequently occurring elements that might be added in the future.

    // The created date of the account object.
    google.protobuf.Timestamp created_date_time = 16;

    // The date and time the user was deleted. Returned only on $select.
    google.protobuf.Timestamp deleted_date_time = 17;

    // properties for sync

    // `true` if this object is synced from an on-premises directory;
    // `false` if this object was originally synced from an on-premises directory but is no longer synced;
    // null if this object has never been synced from an on-premises directory (default). Read-only
    bool on_premises_sync_enabled = 20;

    // This property is used to associate an on-premises LDAP user to the oCIS account object.
    // This property must be specified when creating a new user account in the Graph if you are using a federated domain for the user’s userPrincipalName (UPN) property.
    // Important: The $ and _ characters cannot be used when specifying this property. Supports $filter.
    string on_premises_immutable_id = 21;

    // Contains the on-premises security identifier (SID) for the user that was synchronized from on-premises to the cloud. Read-only.
    string on_premises_security_identifier = 22;

    // Contains the on-premises LDAP `distinguished name` or `DN`.
    // The property is only populated for customers who are synchronizing their on-premises directory to ocis-accounts. Read-only.
    string on_premises_distinguished_name = 23;

    // Contains the on-premises `samAccountName` synchronized from the on-premises directory.
    // The property is only populated for customers who are synchronizing their on-premises directory to ocis-accounts. Read-only.
    string on_premises_sam_account_name = 24;

    // Contains the on-premises `domainFQDN`, also called `dnsDomainName` synchronized from the on-premises directory
    // The property is only populated for customers who are synchronizing their on-premises directory to ocis-accounts. Read-only.
    string on_premises_domain_name = 25;

    // Contains the on-premises userPrincipalName synchronized from the on-premises directory.
    // The property is only populated for customers who are synchronizing their on-premises directory to ocis-accounts. Read-only.
    string on_premises_user_principal_name = 26;

    // Contains extensionAttributes 1-15 for the user. Note that the individual extension attributes are neither selectable nor filterable.
    // For an onPremisesSyncEnabled user, this set of properties is mastered on-premises and is read-only.
    // For a cloud-only user (where onPremisesSyncEnabled is false), these properties may be set during creation or update.
    //onPremisesExtensionAttributes onPremisesExtensionAttributes = 27

    // Indicates the last time at which the object was synced with the on-premises directory; Read-only.
    google.protobuf.Timestamp on_premises_last_sync_date_time = 28;

    // Errors when using synchronization during provisioning.
    repeated OnPremisesProvisioningError on_premises_provisioning_errors = 29;

    // TODO do we need to sync uidnumber and gidnumber from the external ldap? we may assign different numbers so eos has a non colliding namespace.
    // we can sync them to the (uid|gid)_number fields but what if they changed in the external ldap and now collide?
    // move those properties to a posixaccount message so we can exchange that part with an external (readonly or writeable) ldap server?

    // For an external user invited to the tenant using the invitation API, this property represents the invited user's invitation status.
    // For invited users, the state can be `PendingAcceptance` or `Accepted`, or "" / emptystring for all other users.
    // Returned only on $select. Supports $filter with the supported values. For example: $filter=externalUserState eq 'PendingAcceptance'.
    string external_user_state = 40;

    // Shows the timestamp for the latest change to the externalUserState property. Returned only on $select.
    google.protobuf.Timestamp external_user_state_change_date_time = 41;

    // Any refresh tokens or sessions tokens (session cookies) issued before this time are invalid, and applications will get
    // an error when using an invalid refresh or sessions token to acquire a delegated access token (to access APIs such as Microsoft Graph).
    // If this happens, the application will need to acquire a new refresh token by making a request to the authorize endpoint.
    // Returned only on $select. Read-only. Use invalidateAllRefreshTokens to reset.
    google.protobuf.Timestamp refresh_tokens_valid_from_date_time = 60;

    // Any refresh tokens or sessions tokens (session cookies) issued before this time are invalid, and applications will get
    // an error when using an invalid refresh or sessions token to acquire a delegated access token (to access APIs such as Microsoft Graph).
    // If this happens, the application will need to acquire a new refresh token by making a request to the authorize endpoint.
    // Read-only. Use revokeSignInSessions to reset.
    google.protobuf.Timestamp sign_in_sessions_valid_from_date_time = 61;
}

// Identities Represents an identity used to sign in to a user account.
// An identity can be provided by oCIS, by organizations, or by social identity providers such as Facebook, Google, or Microsoft, that are tied to a user account.
// This enables the user to sign in to the user account with any of those associated identities.
// They are also used to keep a history of old usernames.
message Identities {
    // Specifies the user sign-in types in your directory, such as `emailAddress`, `userName` or `federated`.
    // Here, federated represents a unique identifier for a user from an issuer, that can be in any format chosen by the issuer.
    // Additional validation is enforced on *issuer_assigned_id* when the sign-in type is set to `emailAddress` or `userName`.
    // This property can also be set to any custom string.
    string sign_in_type = 1;

    // Specifies the issuer of the identity, for example facebook.com.
    // For local accounts (where signInType is not federated), this property is
    // the local B2C tenant default domain name, for example contoso.onmicrosoft.com.
    // For external users from other Azure AD organization, this will be the domain of
    // the federated organization, for example contoso.com.
    // Supports $filter. 512 character limit.
    string issuer = 2;

    // Specifies the unique identifier assigned to the user by the issuer. The combination of *issuer* and *issuerAssignedId* must be unique within the organization. Represents the sign-in name for the user, when signInType is set to emailAddress or userName (also known as local accounts).
    // When *signInType* is set to:
    // * `emailAddress`, (or starts with `emailAddress` like `emailAddress1`) `issuerAssignedId` must be a valid email address
    // * `userName`, issuer_assigned_id must be a valid local part of an email address
    // Supports $filter. 512 character limit.
    string issuer_assigned_id = 3;
}
message PasswordProfile {
    //	The password for the user. This property is required when a user is created.
    // It can be updated, but the user will be required to change the password on the next login.
    // The password must satisfy minimum requirements as specified by the user’s passwordPolicies property. By default, a strong password is required.
    string password = 1;

    // The time when this account last changed their password.
    google.protobuf.Timestamp last_password_change_date_time = 2;

    // Specifies password policies for the user.
    //This value is an enumeration with one possible value being “DisableStrongPassword”, which allows weaker passwords than the default policy to be specified.
    // “DisablePasswordExpiration” can also be specified.
    repeated string password_policies = 3;

    // `true` if the user must change her password on the next login; otherwise false.
    bool force_change_password_next_sign_in = 4;

    // If `true`, at next sign-in, the user must perform a multi-factor authentication (MFA) before being forced to change their password. The behavior is identical to forceChangePasswordNextSignIn except that the user is required to first perform a multi-factor authentication before password change. After a password change, this property will be automatically reset to false. If not set, default is false.
    bool force_change_password_next_sign_in_with_mfa = 5;
}

message Group {

    // The unique identifier for the group.
    // Returned by default. Inherited from directoryObject. Key. Not nullable. Read-only.
    string id = 1;

    // groupofnames

    // The display name for the group. This property is required when a group is created and cannot be cleared during updates.
    // Returned by default. Supports $filter and $orderby.
    // groupofnames MUST cn
    string display_name = 2;
    // groupofnames MUST/MAY member

    // TODO accounts (users) only for now, we can add groups with the dedicated message using oneof construct later

    // Users, contacts, and groups that are members of this group. HTTP Methods: GET (supported for all groups), POST (supported for security groups and mail-enabled security groups), DELETE (supported only for security groups) Read-only. Nullable.
    repeated Account members = 3;

    // groupofnames MAY businessCategory
    // groupofnames MAY o
    // groupofnames MAY ou
    // groupofnames MAY owner, SINGLE-VALUE but there might be multiple owners
    repeated Account owners = 4;

    // An optional description for the group. Returned by default.
    // groupofnames MAY description
    string description = 5;

    // groupofnames MAY seeAlso

    // posixgroup

    // used for exposing the user using ldap
    // posixgroup MUST gidnumber
    int64 gid_number = 6;
    // posixgroup MAY authPassword
    // posixgroup MAY userPassword
    // posixgroup MAY memberUid -> groupofnames member
    // posixgroup MAY description  -> groupofnames


    // Timestamp of when the group was created. The value cannot be modified and is automatically populated when the group is created
    // Returned by default. Read-only.
    google.protobuf.Timestamp created_date_time = 7;

    // For some Azure Active Directory objects (user, group, application), if the object is deleted, it is first logically deleted, and this property is updated with the date and time when the object was deleted. Otherwise this property is null. If the object is restored, this property is updated to null.
    // Returned by default. Read-only.
    google.protobuf.Timestamp deleted_date_time = 8;

    // Timestamp of when the group is set to expire. The value cannot be modified and is automatically populated when the group is created.
    // Returned by default. Read-only.
    google.protobuf.Timestamp expiration_date_time = 9;

    // True if the group is not displayed in certain parts of the Outlook user interface:
    // in the Address Book, in address lists for selecting message recipients, and in the Browse Groups dialog for searching groups; false otherwise. Default value is false.
    // Returned only on $select.
    bool hide_from_address_lists = 10;

    // 	Specifies the visibility of an Office 365 group. Possible values are: Private, Public, or Hiddenmembership; blank values are treated as public. See group visibility options to learn more.
    // Visibility can be set only when a group is created; it is not editable.
    // Returned by default.
    string visibility = 11;

    // Field numbers in the range 16 through 2047 take two bytes. So you should reserve the field numbers 1 through 15 for very frequently occurring message elements. Remember to leave some room for frequently occurring elements that might be added in the future.

    // properties for sync

    // `true` if this group is synced from an on-premises directory;
    // `false` if this group was originally synced from an on-premises directory but is no longer synced;
    // null if this object has never been synced from an on-premises directory (default).
    // Returned by default. Read-only. Supports $filter.
    bool on_premises_sync_enabled = 20;

    // This property is used to associate an on-premises LDAP user to the oCIS account object.
    // This property must be specified when creating a new user account in the Graph if you are using a federated domain for the user’s userPrincipalName (UPN) property.
    // Important: The $ and _ characters cannot be used when specifying this property. Supports $filter.
    string on_premises_immutable_id = 21;

    // Contains the on-premises security identifier (SID) for the group that was synchronized from on-premises to the cloud. Returned by default. Read-only.
    string on_premises_security_identifier = 22;

    // Contains the on-premises LDAP `distinguished name` or `DN`.
    // The property is only populated for customers who are synchronizing their on-premises directory to ocis-accounts. Read-only.
    string on_premises_distinguished_name = 23;

    // Contains the on-premises `samAccountName` synchronized from the on-premises directory.
    // The property is only populated for customers who are synchronizing their on-premises directory to ocis-accounts. Returned by default. Read-only.
    string on_premises_sam_account_name = 24;

    // Contains the on-premises domain FQDN, also called dnsDomainName synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect.
    // Returned by default. Read-only.
    string on_premises_domain_name = 25;

    // 	Contains the on-premises netBios name synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect.
    // Returned by default. Read-only.
    string on_premises_net_bios_name = 26;

    // Indicates the last time at which the group was synced with the on-premises directory.
    // Returned by default. Read-only. Supports $filter.
    string on_premises_last_sync_date_time = 27;

    // Errors when using synchronization during provisioning.
    repeated OnPremisesProvisioningError on_premises_provisioning_errors = 28;
}

message OnPremisesProvisioningError {
    // Category of the provisioning error. Note: Currently, there is only one possible value. Possible value: PropertyConflict - indicates a property value is not unique. Other objects contain the same value for the property.
    string category = 1;
    // The date and time at which the error occurred.
    google.protobuf.Timestamp occurred_date_time = 2;
    // Name of the directory property causing the error. Current possible values: UserPrincipalName or ProxyAddress
    string property_causing_error = 3;
    // Value of the property causing the error.
    string value = 4;
}
